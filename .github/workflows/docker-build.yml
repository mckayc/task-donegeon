name: Build & Push Docker Image

on:
  push:
    branches: [ "master", "dev" ]  # Trigger on both master and dev branches
  workflow_dispatch:              # Manual run from the Actions tab

env:
  IMAGE_NAME: mckayc/task-donegeon

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1⃣ Check out source
      - name: Checkout code
        uses: actions/checkout@v4

      # 2⃣ Extract version from package.json
      - name: Extract version
        id: vars
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "IMAGE_TAG=${VERSION}" >> "$GITHUB_OUTPUT"

      # 3⃣ Determine branch-based tag
      - name: Set tag suffix based on branch
        id: branch_tag
        run: |
          if [ "${GITHUB_REF##*/}" = "master" ]; then
            echo "SUFFIX=latest" >> "$GITHUB_OUTPUT"
          else
            echo "SUFFIX=dev" >> "$GITHUB_OUTPUT"
          fi
      # Start test code
      # 4⃣ Decide build platforms (multi-arch only on master)
      - name: Set build platforms
        id: platforms
        run: |
          if [ "${GITHUB_REF##*/}" = "master" ]; then
            echo "PLATFORMS=linux/amd64,linux/arm64" >> "$GITHUB_OUTPUT"
          else
            echo "PLATFORMS=linux/amd64" >> "$GITHUB_OUTPUT"
          fi
      # End test code
      # 5⃣ Set up QEMU and Buildx
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7⃣ Build and push Docker image
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ steps.platforms.outputs.PLATFORMS }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:${{ steps.branch_tag.outputs.SUFFIX }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
